version: '3'
services:

  # Serviço do banco de dados PostgreSQL
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: exam_db
    ports:
      - "5432:5432" # Mapeando a porta do PostgreSQL para o host
    volumes:
      - postgres_data:/var/lib/postgresql/data # Persistência de dados
    networks:
      - exam-network # Rede para comunicação com outros serviços

  # Serviço do enrollment-service
  enrollment-service:
    build: ./enrollment-service
    ports:
      - "3000:3000" # Porta onde o enrollment-service vai rodar
    environment:
      DATABASE_HOST: postgres # O nome do serviço do PostgreSQL
      DATABASE_PORT: 5432
      DATABASE_USER: postgres
      DATABASE_PASSWORD: password
      DATABASE_NAME: exam_db
    depends_on:
      - postgres # Garantir que o PostgreSQL esteja pronto antes de subir o serviço
    networks:
      - exam-network

  # Serviço do exam-packing-service
  exam-packing-service:
    build: ./exam-packing-service
    ports:
      - "3123:3123"
    networks:
      - exam-network # Rede para comunicação com outros serviços
    volumes:
      - ./exam-packing-service:/usr/src/app # Montar o diretório do código no contêiner

  # Serviço do cache Redis
  redis:
    image: redis:6
    ports:
      - "6379:6379" # Porta padrão do Redis
    networks:
      - exam-network

  # Serviço do exam-service
  exam-service:
    build: ./exam-service
    ports:
      - "3001:3000" # Porta onde o exam-service vai rodar
    environment:
      DATABASE_HOST: postgres # O nome do serviço do PostgreSQL
      DATABASE_PORT: 5432
      DATABASE_USER: postgres
      DATABASE_PASSWORD: password
      DATABASE_NAME: exam_db
      EXAM_PACKING_SERVICE_URL: http://exam-packing-service:3123
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_TTL: 9000000 # Estimei 2,5 horas considerando tempo de cheeckin e duração da prova
    depends_on:
      - postgres # Garantir que o PostgreSQL esteja pronto antes de subir o serviço
      - redis # Garantir que o Redis esteja pronto antes de subir o serviço
      - exam-packing-service # Depende do exam-packing-service
    networks:
      - exam-network # Rede para comunicação com outros serviços

# Definição de volumes para persistência de dados do PostgreSQL
volumes:
  postgres_data:

# Rede que os serviços vão compartilhar
networks:
  exam-network:
    driver: bridge
